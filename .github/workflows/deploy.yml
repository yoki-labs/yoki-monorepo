name: Deploy to Production
on:
    workflow_dispatch:

jobs:
    docker:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                service-name: [yoki_bot, nsfw]
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Verify Changed files
              uses: dorny/paths-filter@v2
              id: verify-changed-files
              with:
                  filters: |
                      service:
                        - 'yoki/${{ matrix.service-name }}/src/**'
                        - 'docker/${{ matrix.service-name }}/**'

            - name: Set up QEMU
              if: steps.verify-changed-files.outputs.service == 'true'
              uses: docker/setup-qemu-action@v2

            - name: Set up Docker Buildx
              if: steps.verify-changed-files.outputs.service == 'true'
              uses: docker/setup-buildx-action@v2

            - name: Login to GCR
              if: steps.verify-changed-files.outputs.service == 'true'
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push
              if: steps.verify-changed-files.outputs.service == 'true'
              uses: docker/build-push-action@v3
              with:
                  context: .
                  push: true
                  tags: ghcr.io/${{ github.repository }}/${{ matrix.service-name }}:latest
                  file: docker/${{ matrix.service-name }}/Dockerfile
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

    deploy:
        name: Deploy to Production
        needs: [docker]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3

            - name: Verify Changed files
              uses: dorny/paths-filter@v2
              id: verify-changed-files
              with:
                  filters: |
                      db:
                        - 'yoki/bot/prisma/migrations/**'
                        - 'yoki/bot/prisma/schema.prisma'

            - uses: pnpm/action-setup@v2
              with:
                  version: 7.28.0

            - name: Install Node v14
              if: steps.verify-changed-files.outputs.db == 'true'
              uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a # tag=v3
              with:
                  node-version: "16"
                  cache: "pnpm"

            - name: Run database migration if schema changed.
              if: steps.verify-changed-files.outputs.db == 'true'
              run: |
                  cd yoki/bot
                  npx prisma migrate deploy
              env:
                  DATABASE_URL: ${{ secrets.DATABASE_MIGRATION_URL }}

            - name: executing remote ssh commands using ssh key
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.VPS_HOST }}
                  username: nico
                  password: ${{ secrets.VPS_PASSWORD }}
                  port: 22
                  script: |
                      cd yoki
                      cd docker/compose && docker-compose pull
                      cd ../../
                      pnpm prod:start
